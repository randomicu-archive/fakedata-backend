name: ci

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  tests:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:12
        env:
          POSTGRES_SERVER: localhost
          POSTGRES_DB: fakedata
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        ports: ['5432:5432']

    steps:
    - uses: actions/checkout@v2

    - name: Add Python 3.8
      uses: actions/setup-python@v2
      with:
        python-version: 3.8

    - name: Add poetry preview
      uses: Gr1N/setup-poetry@v3
      with:
        poetry-preview: true


    - name: Cache poetry's venv
      uses: actions/cache@v2
      id: cache
      with:
        path: ~/.virtualenvs
        key: ${{ runner.os }}-poetry-${{ hashFiles('**/poetry.lock') }}
        restore-keys: |
          ${{ runner.os }}-poetry-${{ hashFiles('**/poetry.lock') }}

    - name: Set poetry config
      run: |
        poetry config virtualenvs.in-project false
        poetry config virtualenvs.path ~/.virtualenvs

    - name: Install Dependencies
      run: poetry add --dev pytest-cov && poetry install --no-root
      if: steps.cache.outputs.cache-hit != 'true'

    - name: Run pytest
      env:
        FAKEDATA_DATABASE_URL: postgresql://postgres:postgres@localhost:5432/fakedata
      run: |
        PYTHONPATH=$(pwd) poetry run pytest -vvv --cov .
